name: PR Screenshot Commenter

on:
  pull_request:

jobs:
  screenshot:
    runs-on: ubuntu-22.04
    permissions:
      contents: write # Changed from read to write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - run: npm i -g @antfu/ni

      - name: Install dependencies
        run: nci

      - name: build app
        run: nr build

      - name: Remove old screenshots
        run: rm -rf playwright/previews/*.png

      - name: Install Playwright Browsers
        run: nr playwright install --with-deps
      - name: Run Playwright tests
        run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- nr test:playwright

      - name: upload screenshot
        id: upload-screenshot
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: playwright/previews/*.png

      - name: Publish screenshot to branch
        id: publish_screenshots
        env:
          BRANCH: pr-screenshot-${{ github.event.pull_request.number }}-${{ github.run_id }}
          REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SCREENSHOT_DIR="playwright/previews"
          UPLOAD_DIR="upload"
          
          FINAL_MESSAGE="Screenshots for this PR:"

          mkdir -p "$UPLOAD_DIR"

          shopt -s nullglob
          SCREENSHOT_FILES=("$SCREENSHOT_DIR"/*.png)
          shopt -u nullglob

          if [ ${#SCREENSHOT_FILES[@]} -eq 0 ]; then
            echo "No PNG screenshots found in $SCREENSHOT_DIR"
            FINAL_MESSAGE="No screenshots found for this PR."
          else
            echo "Copying screenshots to $UPLOAD_DIR:"
            cp "${SCREENSHOT_FILES[@]}" "$UPLOAD_DIR/"
            
            echo "Screenshots in $UPLOAD_DIR:"
            ls "$UPLOAD_DIR"

            cd "$UPLOAD_DIR"

            for FILE in *.png; do
              ENCODED_FILE=$(printf %s "$FILE" | jq -sRr @uri)
              FINAL_MESSAGE="${FINAL_MESSAGE}\\n![](https://raw.githubusercontent.com/${REPO}/${BRANCH}/${ENCODED_FILE})"
            done
            
            git init -b "$BRANCH" 
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            
            if ! git diff --staged --quiet; then
              echo "Committing and pushing screenshots..."
              git commit -m "Add screenshots for PR #${{ github.event.pull_request.number }}"
              git remote add origin "https://x-access-token:${GH_TOKEN}@github.com/${REPO}.git"
              git push origin "$BRANCH" --force
            else
              echo "No new screenshots were staged for commit."
            fi
            cd ..
          fi
          
          {
            echo "screenshot_comment_body<<EOF"
            echo -e "${FINAL_MESSAGE}"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Comment with screenshot
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: ${{ steps.publish_screenshots.outputs.screenshot_comment_body }}
          pr_number: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
