name: Tag on Push to Main

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-22.04

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'

      - run: npm i -g @antfu/ni

      - name: install dependencies
        run: nci

      - name: lint
        run: nr lint

  create_tag:
    needs: lint
    runs-on: ubuntu-22.04

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}

      - name: Get current version from package.json
        id: get_version
        run: echo "package_version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: Get latest tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Check if version differs from latest tag
        id: check_version
        run: |
          if [ "v${{ steps.get_version.outputs.package_version }}" != "${{ steps.get_latest_tag.outputs.latest_tag }}" ]; then
            echo "new_version=true" >> $GITHUB_OUTPUT
          else
            echo "new_version=false" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create new version tag if version differs
        if: steps.check_version.outputs.new_version == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v${{ steps.get_version.outputs.package_version }}"
          git push origin "v${{ steps.get_version.outputs.package_version }}"

      - name: Create Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          tag_string="build-$(date -u +%Y%m%d%H%M%S)-${GITHUB_SHA::8}"
          git tag "$tag_string"
          git push origin "$tag_string"
