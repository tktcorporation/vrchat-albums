name: Build and Release Electron App (Cross Platform)

on:
  push:
    tags:
      - '*'

concurrency:
  group: release

permissions:
  contents: write

jobs:
  vars:
    name: setup vars
    runs-on: ubuntu-22.04
    outputs:
      app-version: ${{ steps.app-version.outputs.version }}
      is-semver-tag: ${{ steps.check-tag-format.outputs.is-semver }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: output version
        id: app-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check tag format
        id: check-tag-format
        run: |
          if [[ "${GITHUB_REF##*/}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.* ]]; then
            echo "is-semver=true" >> $GITHUB_OUTPUT
          else
            echo "is-semver=false" >> $GITHUB_OUTPUT
          fi

  draft-release:
    runs-on: ubuntu-latest
    needs: vars
    outputs:
      release_id: ${{ steps.create-release-draft.outputs.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get-version
        uses: battila7/get-version-action@v2

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: --strip header ${{ needs.vars.outputs.is-semver-tag == 'true' && '--current' || '--unreleased' }}
        env:
          OUTPUT: CHANGELOG.md

      - name: Delete drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

      - name: Create Release Draft
        id: create-release-draft
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          # v0.0.0 or ref
          name: ${{ needs.vars.outputs.is-semver-tag == 'true' && steps.get-version.outputs.version || github.ref }}
          body: ${{ steps.git-cliff.outputs.content }}

  electron-build:
    name: Build on ${{ matrix.os }}
    needs: [vars, draft-release]
    runs-on: ${{ matrix.os }}
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [windows-latest, ubuntu-22.04, macos-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - run: npm i -g @antfu/ni

      - name: Install dependencies
        run: nci

      - name: Build and Publish Electron App
        env:
          NODE_ENV: production
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NOT_DRAFT_RELEASE: 'false'
        run: |
          nr clean:build
          nr build
          if [[ "${{ needs.vars.outputs.is-semver-tag }}" == 'true' ]]; then
            nlx electron-builder --config=electron-builder.cjs --${{ matrix.os == 'windows-latest' && 'win' || matrix.os == 'ubuntu-22.04' && 'linux' || 'mac' }} --publish always
          else
            nlx electron-builder --config=electron-builder.cjs --${{ matrix.os == 'windows-latest' && 'win' || matrix.os == 'ubuntu-22.04' && 'linux' || 'mac' }} --publish never
            tag_string=$(echo "${GITHUB_REF##*/}" | sed 's/v//')
            echo "tag_string: $tag_string"
            for file in ./dist/*; do
              result=$(gh release upload "$tag_string" "$file" || echo "failed")
              echo "result: $file $result"
            done
          fi

      - name: Upload sourcemaps
        run: nr sentry:sourcemaps

  publish-release:
    needs: [vars, draft-release, electron-build]
    runs-on: ubuntu-latest
    if: ${{ needs.vars.outputs.is-semver-tag == 'true' }}
    steps:
      - name: Publish Release
        uses: eregon/publish-release@v1
        with:
          release_id: ${{ needs.draft-release.outputs.release_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
