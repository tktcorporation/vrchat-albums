name: Build and Release Electron App (Cross Platform)

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  vars:
    name: setup vars
    runs-on: ubuntu-latest
    outputs:
      app-version: ${{ steps.app-version.outputs.version }}
      is-semver-tag: ${{ steps.check-tag-format.outputs.is-semver }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'

      - name: output version
        id: app-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check tag format
        id: check-tag-format
        run: |
          if [[ "${GITHUB_REF##*/}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "is-semver=true" >> $GITHUB_OUTPUT
          else
            echo "is-semver=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: Build on ${{ matrix.os }}
    needs: vars
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'

      - run: npm i -g @antfu/ni

      - name: Install dependencies
        run: nci

      - name: Build Electron app
        run: nr dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}-v${{ needs.vars.outputs.app-version }}
          path: |
            dist/*
  
  release:
    needs:
      - build
      - vars
    runs-on: ubuntu-latest
    env:
      WIN_ARTIFACT: app-windows-latest-v${{ needs.vars.outputs.app-version }}
      UBUNTU_ARTIFACT: app-ubuntu-latest-v${{ needs.vars.outputs.app-version }}

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Zip artifacts
        run: |
          zip -r "${WIN_ARTIFACT}.zip" "${WIN_ARTIFACT}"
          zip -r "${UBUNTU_ARTIFACT}.zip" "${UBUNTU_ARTIFACT}"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.WIN_ARTIFACT }}.zip
            ${{ env.UBUNTU_ARTIFACT }}.zip
          tag_name: ${{ github.ref }}
          body: |
            Release for ${{ github.ref }}
          draft: ${{ needs.vars.outputs.is-semver-tag == 'false' }}
          prerelease: false
